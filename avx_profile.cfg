if [ -e /etc/localgateway/controller.cfg ]; then
  NODE_NAME=controller
else
  NODE_NAME=`sudo jq -r .gateway_name /etc/localgateway/gateway.cfg`
fi


SPIRE_WL_SVID=/opt/spire-gateway/certs/${NODE_NAME}.crt
SPIRE_WL_CA_SVID=/opt/spire-gateway/certs/${NODE_NAME}-bundle.crt
SPIRE_WL_KEY=/opt/spire-gateway/certs/${NODE_NAME}.key
SPIRE_AGENT_SVID=/opt/spire-gateway/data/agent/agent_svid.der
SPIRE_AGENT_CA_SVID=/opt/spire-gateway/data/agent/bundle.der
SPIRE_AGENT_KEY=/opt/spire-gateway/data/agent/svid.key
SSL_CERT=/etc/ssl/certs/${NODE_NAME}.crt
SSL_CA_CERT=/usr/local/share/ca-certificates/ca.crt
SSL_KEY=/etc/ssl/private/${NODE_NAME}.key

alias mysetup='sudo apt update; sudo apt install -y git vim tmux jq sqlite3; ehco "set -g mouse on" > ~/.tmux.conf'
alias myip='/usr/bin/curl ipinfo.io/ip'
alias mydate='echo `date +"[%y-%m-%d %H:%M:%S.%s %Z]"`'
alias spiredb='sudo /usr/bin/sqlite3 -header -column -cmd ".width 0" /opt/spire-controller/data/server/datastore.sqlite3'
alias ipython='sudo /usr/bin/python3 -m IPython'
alias tail_syslog='sudo /usr/bin/tail -F /var/log/syslog'
alias spire_stat='sudo /bin/systemctl status spire-controller.service spire-gateway.service --no-pager'
alias spire_log_tail='sudo /usr/bin/tail -F /var/log/cloudx/spire/spire-server.log /var/log/cloudx/spire/spire-agent.log'
alias agtsvid='sudo /usr/bin/openssl x509 -text -noout -inform DER -in ${SPIRE_AGENT_SVID}'
alias agtsvidd='sudo /usr/bin/openssl x509 -startdate -enddate -noout -inform DER -in ${SPIRE_AGENT_SVID}'
alias agtcasvid='sudo /usr/bin/openssl x509 -text -noout -inform DER -in ${SPIRE_AGENT_CA_SVID}'
alias agtcasvidd='sudo /usr/bin/openssl x509 -startdate -enddate -noout -inform DER -in ${SPIRE_AGENT_CA_SVID}'
alias wlsvid='sudo /usr/bin/openssl x509 -text -noout -inform PEM -in ${SPIRE_WL_SVID}'
alias wlsvidd='sudo /usr/bin/openssl x509 -startdate -enddate -noout -inform PEM -in ${SPIRE_WL_SVID}'
alias wlcasvid='sudo /usr/bin/openssl x509 -text -noout -inform PEM -in ${SPIRE_WL_CA_SVID}'
alias wlcasvidd='sudo /usr/bin/openssl x509 -startdate -enddate -noout -inform PEM -in ${SPIRE_WL_CA_SVID}'
alias sslcert='sudo /usr/bin/openssl x509 -text -noout -inform PEM -in ${SSL_CERT}'
alias sslcertd='sudo /usr/bin/openssl x509 -startdate -enddate -noout -inform PEM -in ${SSL_CERT}'
alias sslcacert='sudo /usr/bin/openssl x509 -text -noout -inform PEM -in ${SSL_CA_CERT}'
alias sslcacertd='sudo /usr/bin/openssl x509 -startdate -enddate -noout -inform PEM -in ${SSL_CA_CERT}'


alias agt_stat='sudo /bin/systemctl status spire-gateway.service --no-pager'
alias agt_stop='sudo /bin/systemctl stop spire-gateway.service'
alias agt_start='sudo /bin/systemctl start spire-gateway.service'
alias agt_restart='sudo /bin/systemctl restart spire-gateway.service'
alias agt_sysd='sudo /usr/bin/vim /lib/systemd/system/spire-gateway.service'
alias agt_log_tail='sudo /usr/bin/tail -F /var/log/cloudx/spire/spire-agent.log'
alias agt_log='sudo /usr/bin/vim /var/log/cloudx/spire/spire-agent.log'
alias agt_cfg='sudo /usr/bin/vim /opt/spire-gateway/conf/agent/agent.conf'
alias agt_env='sudo /usr/bin/vim /etc/default/spire-gateway'

alias svr_stat='sudo /bin/systemctl status spire-controller.service --no-pager'
alias svr_stop='sudo /bin/systemctl stop spire-controller.service'
alias svr_start='sudo /bin/systemctl start spire-controller.service'
alias svr_restart='sudo /bin/systemctl restart spire-controller.service'
alias svr_sysd='sudo /usr/bin/vim /lib/systemd/system/spire-controller.service'
alias svr_log_tail='sudo /usr/bin/tail -F /var/log/cloudx/spire/spire-server.log'
alias svr_log='sudo /usr/bin/vim /var/log/cloudx/spire/spire-server.log'
alias svr_cfg='sudo /usr/bin/vim /opt/spire-controller/conf/server/server.conf'
alias svr_ttl='sudo /usr/bin/vim /opt/spire-controller/conf/server/custom_data.json'
alias svr_env='sudo /usr/bin/vim /etc/default/spire-controller'

alias helper_stat='sudo /bin/systemctl status apache-spiffe-helper.service --no-pager'
alias helper_stop='sudo /bin/systemctl stop apache-spiffe-helper.service'
alias helper_start='sudo /bin/systemctl start apache-spiffe-helper.service'
alias helper_restart='sudo /bin/systemctl restart apache-spiffe-helper.service'
alias helper_sysd='sudo /usr/bin/vim /lib/systemd/system/apache-spiffe-helper.service'
alias helper_log_tail='sudo /usr/bin/tail -F /var/log/cloudx/commands.log | grep "spiffe-helper"'
alias helper_cfg='sudo /usr/bin/vim /opt/spire-gateway/conf/agent/apache.conf'

alias avxgw_stat='sudo /bin/systemctl status avx-gw-state-sync.service --no-pager'
alias avxgw_stop='sudo /bin/systemctl stop avx-gw-state-sync.service'
alias avxgw_start='sudo /bin/systemctl start avx-gw-state-sync.service'
alias avxgw_restart='sudo /bin/systemctl restart avx-gw-state-sync.service'
alias avxgw_sysd='sudo /usr/bin/vim /lib/systemd/system/avx-gw-state-sync.service'
alias avxgw_log_tail='sudo /usr/bin/tail -F /var/log/cloudx/avx-gw-state-sync.log'

alias avxctl_stat='sudo /bin/systemctl status avx-ctrl-state-sync.service --no-pager'
alias avxctl_stop='sudo /bin/systemctl stop avx-ctrl-state-sync.service'
alias avxctl_start='sudo /bin/systemctl start avx-ctrl-state-sync.service'
alias avxctl_restart='sudo /bin/systemctl restart avx-ctrl-state-sync.service'
alias avxctl_sysd='sudo /usr/bin/vim /lib/systemd/system/avx-ctrl-state-sync.service'
alias avxctl_log_tail='sudo /usr/bin/tail -F /var/log/cloudx/avx-ctrl-state-sync.log'

alias httpd_stat='sudo /bin/systemctl status apache2.service --no-pager'
alias httpd_stop='sudo /bin/systemctl stop apache2.service'
alias httpd_start='sudo /bin/systemctl start apache2.service'
alias httpd_restart='sudo /bin/systemctl restart apache2.service'
alias httpd_sysd='sudo /usr/bin/vim /lib/systemd/system/apache2.service'
alias httpd_vhosttime='sudo /usr/bin/vim /etc/apache2/sites-available/time-ssl.conf'
alias httpd_vhostgw='sudo /usr/bin/vim /etc/apache2/sites-available/gateway-ssl.conf'
alias httpd_vhostdefault='sudo /usr/bin/vim /etc/apache2/sites-available/defult-ssl.conf'
alias httpd_alllog_tail='sudo /usr/bin/tail -F /var/log/apache2/*.log'
alias httpd_errlog_tail='sudo /usr/bin/tail -F /var/log/apache2/error.log'
alias httpd_acclog_tail='sudo /usr/bin/tail -F /var/log/apache2/access.log'
alias httpd_errlog='sudo /usr/bin/vim /var/log/apache2/error.log'
alias httpd_acclog='sudo /usr/bin/vim /var/log/apache2/access.log'

alias sslh_stat='sudo /bin/systemctl status .service --no-pager'
alias sslh_stop='sudo /bin/systemctl stop .service'
alias sslh_start='sudo /bin/systemctl start .service'
alias sslh_restart='sudo /bin/systemctl restart .service'
alias sslh_sysd='sudo /usr/bin/vim /lib/systemd/system/sslh.service'
alias sslh_log_tail='sudo /usr/bin/tail -F /var/log/sslh.log'
alias sslh_log='sudo /usr/bin/vim /var/log/sslh.log'
alias sslh_cfg='sudo /usr/bin/vim /etc/sslh/sslh.cfg'

alias ctrl_stat='sudo /bin/systemctl status cloudxd.service --no-pager'
alias ctrl_stop='sudo /bin/systemctl stop cloudxd.service'
alias ctrl_start='sudo /bin/systemctl start cloudxd.service'
alias ctrl_restart='sudo /bin/systemctl restart cloudxd.service'
alias ctrl_sysd='sudo /usr/bin/vim /lib/systemd/system/cloudxd.service'
alias cmdlog='sudo /usr/bin/tail -F /var/log/cloudx/commands.log'
alias guilog='sudo /usr/bin/tail -F /var/log/cloudx/gui.log'

#alias _stat='sudo /bin/systemctl status .service --no-pager'
#alias _stop='sudo /bin/systemctl stop .service'
#alias _start='sudo /bin/systemctl start .service'
#alias _restart='sudo /bin/systemctl restart .service'
#alias _sysd='sudo /usr/bin/vim /lib/systemd/system/.service'


mkcd ()
{
  /bin/mkdir -p -- "$1" && cd -P -- "$1"
}

zgrep_agtlog()
{
  PATTERN=$1;
  sudo /bin/zgrep -i -e "${PATTERN}" `ls -1tr /var/log/cloudx/spire/spire-agent.log*`;
}

zgrep_svrlog()
{
  PATTERN=$1;
  sudo /bin/zgrep -i -e "${PATTERN}" `ls -1tr /var/log/cloudx/spire/spire-server.log*`;
}

zgrep_cmdlog()
{
  PATTERN=$1;
  sudo /bin/zgrep -i -e "${PATTERN}" `ls -1tr /var/log/cloudx/commands.log*`;
}

zgrep_avxgwlog()
{
  PATTERN=$1;
  sudo /bin/zgrep -i -e "${PATTERN}" `ls -1tr /var/log/cloudx/avx-gw-state-sync.log*`;
}

zgrep_avxctrllog()
{
  PATTERN=$1;
  sudo /bin/zgrep -i -e "${PATTERN}" `ls -1tr /var/log/cloudx/avx-ctrl-state-sync.log*`;
}

zgrep_errlog()
{
  PATTERN=$1;
  sudo /bin/zgrep -i -e "${PATTERN}" `ls -1tr /var/log/apache2/error.log*`;
}

zgrep_acclog()
{
  PATTERN=$1;
  sudo /bin/zgrep -i -e "${PATTERN}" `ls -1tr /var/log/apache2/access.log*`;
}

zgrep_syslog()
{
  PATTERN=$1;
  sudo /bin/zgrep -i -e "${PATTERN}" `ls -1tr /var/log/syslog*`;
}

get_remote_tls_server_cert()
{
  # e.g: get_remote_tls_server_cert localhost 8081
  SERVER_HOSTNAME=$1;
  SERVER_PORT_NUM=$2;
  echo -n | /usr/bin/openssl s_client -connect ${SERVER_HOSTNAME}:${SERVER_PORT_NUM} -servername ${SERVER_HOSTNAME} | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p';
}

test_mtls_conn_with_server()
{
  # e.g: test_mtls_conn_with_server localhost 8081 DER /opt/spire-gateway/data/agent/agent_svid.der DER /opt/spire-gateway/data/agent/svid.key /opt/spire-gateway/data/agent/bundle.der
  SERVER_HOSTNAME=$1;
  SERVER_PORT_NUM=$2;
  CLIENT_CERT_FORMAT=$3;
  CLIENT_CERT_FPATH=$4;
  CLIENT_KEY_FORMAT=$5;
  CLIENT_KEY_FPATH=$6;
  CLIENT_CA_CERT_FPATH=$7;
  echo "Q" | /usr/bin/openssl s_client -connect ${SERVER_HOSTNAME}:${SERVER_PORT_NUM} -servername ${SERVER_HOSTNAME} -certform ${CLIENT_CERT_FORMAT}  -cert ${CLIENT_CERT_FPATH} -keyform ${CLIENT_KEY_FORMAT}  -key ${CLIENT_KEY_FPATH}  -CAfile ${CLIENT_CA_CERT_FPATH};
}

start_openssl_tls_server()
{
  # e.g: start_openssl_tls_server 3000 PEM /etc/ssl/certs/controller.crt PEM /etc/ssl/private/controller.key /usr/local/share/ca-certificates/ca.crt
  SERVER_PORT_NUM=$1;
  SERVER_CERT_FORMAT=$2;
  SERVER_CERT_FPATH=$3;
  SERVER_KEY_FORMAT=$4;
  SERVER_KEY_FPATH=$5;
  SERVER_CA_CERT_FPATH=$6;
  /usr/bin/openssl s_server -accept ${SERVER_PORT_NUM} -certform ${SERVER_CERT_FORMAT} -cert ${SERVER_CERT_FPATH} -keyform ${SERVER_KEY_FORMAT} -key ${SERVER_KEY_FPATH} -CAfile ${SERVER_CA_CERT_FPATH} -state;
}

test_htpdate_client()
{
  # e.g: SSL_CERT_FILE=/etc/spire-gatew/server.crt /usr/sbin/htpdate -cdddst -p 1 https://time-server.avx.com:443/
  # e.g: test_htpdate_client time-server.avx.com 443 /etc/spire-gatew/server.crt 
  HTTPS_SERVER_HOSTNAME=$1;
  HTTPS_SERVER_PORT_NUM=$2;
  SSL_CERT_FPATH=$3;
  SSL_CERT_FILE=${SSL_CERT_FPATH} /usr/sbin/htpdate -cdddt -p 1 https://${HTTPS_SERVER_HOSTNAME}:${HTTPS_SERVER_PORT_NUM}/;
}

split_ca_bundle()
{
  csplit -z -f splitted-ca-cert $1  '/-----BEGIN CERTIFICATE-----/' '{*}';
}

decode_ca_bundle()
{
  sudo openssl crl2pkcs7 -nocrl -certfile $1 | openssl pkcs7 -print_certs -noout -text
}
